plot(1:n, cumsum(dhyper(1:n, N_, N_-M_, 20)))
plot(1:n, cumsum(dhyper(1:n, N_, N_-M_, 100)))
plot(1:n, cumsum(dhyper(1:n, N_, N_-M_, 50)))
plot(1:n, 1-cumsum(dhyper(1:n, N_, N_-M_, 50)))
k<-30
N_ <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M_ <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
data <- data.frame("N"=1:n,
"upper_crit"=cumsum(dhyper(1:n, N_, N_-M_, k)),
"lower_crit"=1-cumsum(dhyper(1:n, N_, N_-M_, k)))
data.molten <- melt(data, id.vars="N")
colnames(data.molten) <- c("N", "Function", "Value")
head(data.molten)
data.molten
k<-30
N_ <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M_ <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
data <- data.frame("N"=1:n,
"upper_crit"=cumsum(dhyper(1:n, N_, N_-M_, k)),
"lower_crit"=1-cumsum(dhyper(1:n, N_, N_-M_, k)))
data.molten <- melt(data, id.vars="N")
colnames(data.molten) <- c("N", "Function", "Value")
ggplot(data.molten) +
geom_line(aes(x=N, y=Value, colour=Function)) +
ggtitle("Critical Values")
plot_phyper <- function(n, k, alpha_test, alpha_ref, beta_test, beta_ref) {
N_ <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M_ <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
data <- data.frame("N"=1:n,
"upper_crit"=cumsum(dhyper(1:n, N_, N_-M_, k)),
"lower_crit"=1-cumsum(dhyper(1:n, N_, N_-M_, k)))
data.molten <- melt(data, id.vars="N")
colnames(data.molten) <- c("N", "Function", "Value")
ggplot(data.molten) +
geom_line(aes(x=N, y=Value, colour=Function)) +
ggtitle("Critical Values")
}
plot_phyper(48, 20, alpha_test, alpha_ref, beta_test, beta_ref)
plot_phyper(n, 20, alpha_test, alpha_ref, beta_test, beta_ref)
plot_phyper(n, 30, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(1:n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n, N_, N_-M_, k))
return(crit)
}
compute_upperCrit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_Crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-compute_lower_crit
return(crit)
}
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(1:n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n, N_, N_-M_, k))
return(crit)
}
compute_upperCrit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_Crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-compute_lower_crit
return(crit)
}
compute_upperCrit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_Crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-compute_lower_crit
return(crit)
}
compute_Crit(15, 5, alpha_test, alpha_ref, beta_test, beta_ref)
plot_phyper <- function(n, k, alpha_test, alpha_ref, beta_test, beta_ref) {
data <- data.frame("N"=1:n,
"upper_crit"=compute_upper_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref),
"lower_crit"=compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref))
data.molten <- melt(data, id.vars="N")
colnames(data.molten) <- c("N", "Function", "Value")
ggplot(data.molten) +
geom_line(aes(x=N, y=Value, colour=Function)) +
ggtitle("Critical Values")
}
plot_phyper(n, 30, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(1:n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n, N_, N_-M_, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
plot_phyper <- function(n, k, alpha_test, alpha_ref, beta_test, beta_ref) {
data <- data.frame("N"=1:n,
"upper_crit"=compute_upper_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref),
"lower_crit"=compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref))
data.molten <- melt(data, id.vars="N")
colnames(data.molten) <- c("N", "Function", "Value")
ggplot(data.molten) +
geom_line(aes(x=N, y=Value, colour=Function)) +
ggtitle("Critical Values")
}
plot_phyper(n, 30, alpha_test, alpha_ref, beta_test, beta_ref)
plot_phyper(n, 320, alpha_test, alpha_ref, beta_test, beta_ref)
plot_phyper(n, 20, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(n, 20, alpha_test, alpha_ref, beta_test, beta_ref)
compute_uppe_crit(n, 20, alpha_test, alpha_ref, beta_test, beta_ref)
compute_upper_crit(n, 20, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(1:n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(1:n, N_, N_-M_, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_upper_crit(n, 20, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(1:n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n, N_, N_-M_, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_Crit(15, 5, alpha_test, alpha_ref, beta_test, beta_ref)
plot_phyper <- function(n, k, alpha_test, alpha_ref, beta_test, beta_ref) {
domain <- 1:n
data <- data.frame("N"=range,
"upper_crit"=compute_upper_crit(domain, k,
alpha_test, alpha_ref,
beta_test, beta_ref),
"lower_crit"=compute_lower_crit(domain, k,
alpha_test, alpha_ref,
beta_test, beta_ref))
data.molten <- melt(data, id.vars="N")
colnames(data.molten) <- c("N", "Function", "Value")
ggplot(data.molten) +
geom_line(aes(x=N, y=Value, colour=Function)) +
ggtitle("Critical Values")
}
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n, N_, N_-M_, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_Crit(15, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(1:n, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n, N_, N_-M_, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_lower_crit(1:n, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(1:n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n, N_, N_-M_, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_lower_crit(1:n, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(4, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(50, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(1:10, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
crit <- cumsum(dhyper(n_, N, N-M, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_lower_crit(50, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(1:10, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(15, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
print(N)
print(M)
print(n_)
crit <- cumsum(dhyper(n_, N, N-M, k))
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_lower_crit(50, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
print(N)
print(M)
print(n_)
crit <- dhyper(n_, N, N-M, k)
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_lower_crit(50, 5, alpha_test, alpha_ref, beta_test, beta_ref)
compute_lower_crit(15, 5, alpha_test, alpha_ref, beta_test, beta_ref)
dhyper(6,17,8, 5)
dhyper(6,17,8.5, 5)
N
n
n <- 48 ## sample size
n_test <- n/2
n_ref  <- n/2
# postprobu1 <- .8 ## upper posterior probability for scenario1
# postprobl1 <- .7 ## lower posterior probability for scenario1
pi_test    <- .5
pi_ref     <- .5 ## reference pi-value used for power calculations
alpha_test <- 1 ## value of a1 of the Beta(a1,b1)-prior for pi1
beta_test  <- 1 ## value of b1 of the Beta(a1,b1)-prior for pi1
alpha_ref  <- 1 ## value of a2 of the Beta(a2,b2)-prior for pi2
beta_ref   <- 1 ## value of b2 of the Beta(a2,b2)-prior for pi2
set.seed(42)
## Binomial distributed data
x_test <- sum(rbinom(n_test, 1, 1-pi_test))
x_ref  <- sum(rbinom(n_ref, 1, pi_ref))
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N  <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M  <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
print(N)
print(M)
print(n_)
crit <- dhyper(n_, N, N-M, k)
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_lower_crit(50, 5, alpha_test, alpha_ref, beta_test, beta_ref)
n <- 48 ## sample size
n_test <- n/2
n_ref  <- n/2
# postprobu1 <- .8 ## upper posterior probability for scenario1
# postprobl1 <- .7 ## lower posterior probability for scenario1
pi_test    <- .5
pi_ref     <- .5 ## reference pi-value used for power calculations
alpha_test <- 1 ## value of a1 of the Beta(a1,b1)-prior for pi1
beta_test  <- 1 ## value of b1 of the Beta(a1,b1)-prior for pi1
alpha_ref  <- 1 ## value of a2 of the Beta(a2,b2)-prior for pi2
beta_ref   <- 1 ## value of b2 of the Beta(a2,b2)-prior for pi2
set.seed(42)
## Binomial distributed data
x_test <- sum(rbinom(n_test, 1, 1-pi_test))
x_ref  <- sum(rbinom(n_ref, 1, pi_ref))
compute_lower_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
N  <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M  <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
print(N)
print(M)
print(n_)
crit <- dhyper(n_, N, N-M, k)
return(crit)
}
compute_upper_crit <- function(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref) {
upper_crit <- compute_lower_crit(n, k,
alpha_test, alpha_ref,
beta_test, beta_ref)
crit <- 1-upper_crit
return(crit)
}
compute_lower_crit(30, 5, alpha_test, alpha_ref, beta_test, beta_ref)
plot(1:30, compute_lower_crit(1:30, 5, alpha_test, alpha_ref, beta_test, beta_ref)
)
plot(seq(0, 50, by=2), compute_lower_crit(seq(0, 48, by=2), 5, alpha_test, alpha_ref, beta_test, beta_ref)
)
plot(seq(0, 50, by=2), compute_lower_crit(seq(0, 50, by=2), 5, alpha_test, alpha_ref, beta_test, beta_ref))
plot(seq(1, 50, by=2), compute_lower_crit(seq(1, 50, by=2), 5, alpha_test, alpha_ref, beta_test, beta_ref))
plot(seq(0, 50, by=2), compute_lower_crit(seq(0, 50, by=2), 5, alpha_test, alpha_ref, beta_test, beta_ref))
seq(0,50,by=2)
plot_phyper <- function(n, k, alpha_test, alpha_ref, beta_test, beta_ref) {
N_ <- sum(n,
alpha_test, alpha_ref,
beta_test, beta_ref, -2)
M_ <- sum(n/2, alpha_test, beta_test, -1)
n_ <- sum(k, alpha_test, alpha_ref, -1)
data <- data.frame("N"=1:n,
"upper_crit"=1-cumsum(dhyper(1:n, N_, N_-M_, k)),
"lower_crit"=cumsum(dhyper(1:n, N_, N_-M_, k)))
data.molten <- melt(data, id.vars="N")
colnames(data.molten) <- c("N", "Function", "Value")
ggplot(data.molten) +
geom_line(aes(x=N, y=Value, colour=Function)) +
ggtitle("Critical Values")
}
plot_phyper(n, 20, alpha_test, alpha_ref, beta_test, beta_ref)
dbeta(seq(0,1,length.out=100),.5,.5)
plot(dbeta(seq(0,1,length.out=100),.5,.5))
plot(cumsum(dbeta(seq(0,1,length.out=100),.5,.5)))
plot(cumsum(dbeta(seq(0,1,length.out=100),.3,.3)))
plot(cumsum(dbeta(seq(0,1,length.out=100),2,2)))
plot(cumsum(dbeta(seq(0,1,length.out=100),3,3)))
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
sum(c(1,2,3), 12)
?pbinom
plot(0:50,50, 0.5)
plot(pbinom(0:50,50,0.5))
plot(pbinom(0:1000,50,0.5))
plot(pbinom(seq(0,50,length.out = 100),50,0.5))
plot(pbinom(seq(0,50,by=0.1),50,0.5))
plot(pbinom(seq(0,50,by=0.2),50,0.5))
plot(pbinom(0:50,50,0.5))
?dbinom
plot(0:50, cumsum(dbinom(0:50, 50, .5)))
runApp()
runApp()
runApp()
runApp()
