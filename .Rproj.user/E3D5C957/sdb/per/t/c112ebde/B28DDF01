{
    "collab_server" : "",
    "contents" : "library(reshape2)\nlibrary(ggplot2)\n\nn <- 48 ## sample size\nn_test <- n/2\nn_ref  <- n/2\n# postprobu1 <- .8 ## upper posterior probability for scenario1\n# postprobl1 <- .7 ## lower posterior probability for scenario1\n\npi_test    <- .5\npi_ref     <- .5 ## reference pi-value used for power calculations\nalpha_test <- 1 ## value of a1 of the Beta(a1,b1)-prior for pi1\nbeta_test  <- 1 ## value of b1 of the Beta(a1,b1)-prior for pi1\nalpha_ref  <- 1 ## value of a2 of the Beta(a2,b2)-prior for pi2\nbeta_ref   <- 1 ## value of b2 of the Beta(a2,b2)-prior for pi2\n\nset.seed(42)\n## Binomial distributed data\nx_test <- sum(rbinom(n_test, 1, 1-pi_test))\nx_ref  <- sum(rbinom(n_ref, 1, pi_ref))\n\ncompute_lower_crit <- function(n, k, \n                               alpha_test, alpha_ref,\n                               beta_test, beta_ref) {\n  N <- sum(1:n, \n            alpha_test, alpha_ref,\n            beta_test, beta_ref, -2)\n  M <- sum(n/2, alpha_test, beta_test, -1)\n  n <- sum(k, alpha_test, alpha_ref, -1)\n  crit <- cumsum(dhyper(n, N_, N_-M_, k)) \n  return(crit)\n}\n\ncompute_upperCrit <- function(n, k, \n                              alpha_test, alpha_ref,\n                              beta_test, beta_ref) {\n  upper_crit <- compute_Crit(n, k, \n                             alpha_test, alpha_ref, \n                             beta_test, beta_ref)\n  crit <- 1-compute_lower_crit\n  return(crit)\n}\n\ncompute_Crit(15, 5, alpha_test, alpha_ref, beta_test, beta_ref)\n\nplot_phyper <- function(n, k, alpha_test, alpha_ref, beta_test, beta_ref) {\n  N_ <- sum(n, \n            alpha_test, alpha_ref,\n            beta_test, beta_ref, -2)\n  M_ <- sum(n/2, alpha_test, beta_test, -1)\n  n_ <- sum(k, alpha_test, alpha_ref, -1)\n  \n  data <- data.frame(\"N\"=1:n, \n                     \"upper_crit\"=1-cumsum(dhyper(1:n, N_, N_-M_, k)),\n                     \"lower_crit\"=cumsum(dhyper(1:n, N_, N_-M_, k)))\n  data.molten <- melt(data, id.vars=\"N\")\n  colnames(data.molten) <- c(\"N\", \"Function\", \"Value\")\n  ggplot(data.molten) + \n    geom_line(aes(x=N, y=Value, colour=Function)) +\n    ggtitle(\"Critical Values\")\n}\n\n\nplot(cumsum(dbeta(seq(0,1,length.out=100),3,3)))\n\n\n## Helper functions for power calculations\nOR <- function(p1, p2) {\n  y <- (p1*(1-p2))/(p2*(1-p1))\n  return(y)\n}\n\nright_factor <- function(p1, p2, n1, n2, k) {\n  p1 <- rep()\n  \n  y <- prod((1-p1)**n1, (1-p2)**n2, (p2/(1-p2))**k)\n  return(y)\n}\n\npower_fun <- function(n_test, n_ref, x_test, k, p1, p2) {\n  f <- choose(n_test, x_test)*choose(n_ref, k - x_test)*OR(p1, p2)\n  return(f)\n}\n\n\n## Power calculation\np1 <- seq(0,1,length.out = 100)\n# p2 <- seq(0,1,lenght.out = 100)\np2 <- .2\ny <- power_fun(n_test, n_ref, x_test, k, p1, p2)\nplot(p1, y)\n\n\n\n\n\n\n\nn <- 40\np1 <- .5\nk = qbinom(0.05, n, p1)\npbinom(k, n, p1)\npbinom(k - 1, n, p1)\nk = qbinom(0.05, n, p1) - 1 ## rejection region for given n\npbinom(k, n, p1) ## power when prob=p1\n\n\n\n\n# prod(choose(n_test, x_test),\n#      choose(n_ref, k - x_test),\n#      OR(p1, p2)**x_test,\n#      right_factor(p1, p2, n/2, n/2, k))\n\n\n\n\n\n# set.seed(42)\n# ## Prior distribution 'pi_test' for a Go, No-Go decision (responder probability of test drug)\n# plot(density(rbeta(1:n/2, alpha_test, beta_test)))\n# mean_beta_test <- 1/(1-(beta_test/alpha_test))\n# \n# set.seed(100)\n# n <- 9\n# z <- rbetabinom(1000, 0.5, size=n, theta=4)\n# par(las=1,bty=\"l\")\n# plot(table(z)/length(z),ylim=c(0,0.34),col=\"gray\",lwd=4,\n#      ylab=\"probability\")\n# points(0:n,dbinom(0:n,size=n,prob=0.5),col=2,pch=16,type=\"b\")\n# points(0:n,dbetabinom(0:n,size=n,theta=4,\n#                       prob=0.5),col=4,pch=17,type=\"b\")\n# ## correspondence with SuppDists \n# if (require(SuppDists)) {\n#   d1a <- dghyper(0:5,a=-5,N=-10,k=5)\n#   d1b <- dbetabinom(0:5,shape1=5,shape2=5,size=5)\n#   max(abs(d1a-d1b))\n#   p1a <- pghyper(0:5,a=-5,N=-10,k=5,lower.tail=TRUE)\n#   p1b <- cumsum(d1b)\n#   max(abs(p1a-p1b))\n# } \n# \n# \n# \n# \n# \n# ## Prior distribution 'pi_ref' for a Go, No-Go decision (responder probability for reference drug)\n# plot(density(rbeta(1:n/2, alpha_ref, alpha_ref)))",
    "created" : 1494848874388.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "23|53|31|0|\n35|52|41|0|\n45|75|60|0|\n67|24|70|0|\n72|45|77|0|\n",
    "hash" : "238198637",
    "id" : "B28DDF01",
    "lastKnownWriteTime" : 1496154513,
    "last_content_update" : 1496154513053,
    "path" : "~/workspace/R/projects/BayesianSampleSize/sandbox.R",
    "project_path" : "sandbox.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}